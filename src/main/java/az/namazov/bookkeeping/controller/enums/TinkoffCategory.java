package az.namazov.bookkeeping.controller.enums;

import java.util.Arrays;
import java.util.List;
import java.util.Map;

import az.namazov.bookkeeping.exception.IllegalArgumentException;
import lombok.AllArgsConstructor;
import lombok.Getter;

@AllArgsConstructor
@Getter
public enum TinkoffCategory {

    CAR_SHARING(Map.of("Каршеринг", List.of(7512, 4121))),
    COSMETICS(Map.of("Косметика", List.of(5977))),
    LOCAL_TRANSPORT(Map.of("Местный транспорт", List.of(4111))),
    EDUCATION(Map.of("Образование", List.of(8211, 8220, 8241, 8244, 8249, 8299, 8493, 8494, 8351))),
    TOLL_ROADS(Map.of("Платные дороги", List.of(4784))),
    TAXI(Map.of("Такси", List.of(4121))),
    ELECTRONICS_AND_TECHNOLOGY(Map.of("Электроника и техника", List.of(5722, 5732))),
    STATIONERY(Map.of("Канцтовары", List.of(5111, 5943))),
    CHILDREN_GOODS(Map.of("Детские товары", List.of(5641, 5945))),
    NO_CASHBACK(Map.of("Без кэшбэка", List.of(4812, 4813, 4814, 4816, 4829, 4900, 6012, 6050, 6051, 6211, 6529, 6530, 6531, 6532, 6533, 6534, 6536, 6537, 6538, 6540, 7299, 7311, 7372, 7399, 7995, 8999, 9311, 9222, 9223, 9211))),
    FLIGHTS(Map.of("Авиабилеты", List.of(3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3038, 3039, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3055, 3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063, 3064, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3072, 3073, 3074, 3075, 3076, 3077, 3078, 3079, 3080, 3081, 3082, 3083, 3084, 3085, 3086, 3087, 3088, 3089, 3090, 3091, 3092, 3093, 3094, 3095, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3114, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123, 3124, 3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146, 3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3155, 3156, 3157, 3158, 3159, 3160, 3161, 3162, 3163, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172, 3173, 3174, 3175, 3176, 3177, 3178, 3179, 3180, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196, 3197, 3198, 3199, 3200, 3201, 3202, 3203, 3204, 3205, 3206, 3207, 3208, 3209, 3210, 3211, 3212, 3213, 3214, 3215, 3216, 3217, 3218, 3219, 3220, 3221, 3222, 3223, 3224, 3225, 3226, 3227, 3228, 3229, 3230, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 3238, 3239, 3240, 3241, 3242, 3243, 3244, 3245, 3246, 3247, 3248, 3249, 3250, 3251, 3252, 3253, 3254, 3255, 3256, 3257, 3258, 3259, 3260, 3261, 3262, 3263, 3264, 3265, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 3273, 3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281, 3282, 3283, 3284, 3285, 3286, 3287, 3288, 3289, 3290, 3291, 3292, 3293, 3294, 3295, 3296, 3297, 3298, 3299, 4304, 4415, 4418, 4511, 4582))),
    AUTO_SERVICE(Map.of("Автоуслуги", List.of(5511, 5521, 5531, 5532, 5533, 5571, 7012, 7531, 7534, 7535, 7538, 7542, 7549))),
    RENT_CAR(Map.of("Аренда авто", List.of(	3351, 3352, 3353, 3354, 3355, 3356, 3357, 3358, 3359, 3360, 3361, 3362, 3363, 3364, 3365, 3366, 3367, 3368, 3369, 3370, 3371, 3372, 3373, 3374, 3375, 3376, 3377, 3378, 3379, 3380, 3381, 3382, 3383, 3384, 3385, 3386, 3387, 3388, 3389, 3390, 3391, 3392, 3393, 3394, 3395, 3396, 3397, 3398, 3400, 3401, 3402, 3403, 3404, 3405, 3406, 3407, 3408, 3409, 3410, 3412, 3413, 3414, 3415, 3416, 3417, 3418, 3419, 3420, 3421, 3422, 3423, 3425, 3426, 3427, 3428, 3429, 3430, 3431, 3432, 3433, 3434, 3435, 3436, 3437, 3438, 3439, 3441, 7512, 7513, 7519))),
    PHARMACIES(Map.of("Аптеки", List.of(5122, 5292, 5295, 5912))),
    HOUSE_RENOVATION(Map.of("Дом, ремонт", List.of(1520, 1711, 1731, 1740, 1750, 1761, 1771, 1799, 2791, 2842, 5021, 5039, 5046, 5051, 5065, 5072, 5074, 5085, 5198, 5200, 5211, 5231, 5251, 5261, 5415, 5712, 5713, 5714, 5718, 5719, 5722, 7622, 7623, 7629, 7641, 7692, 7699))),
    TRAIN_TICKETS(Map.of("ЖД билеты", List.of(4011, 4111, 4112))),
    ANIMAL(Map.of("Животные", List.of(5995, 742))),
    ART(Map.of("Искусство", List.of(5932, 5937, 5970, 5971, 5972, 5973))),
    CINEMA(Map.of("Кино", List.of(7829, 7832, 7841))),
    BOOKS(Map.of("Книги", List.of(2741, 5111, 5192, 5942, 5994))),
    PHOTO_VIDEO(Map.of("Фото, Видео", List.of(5044, 5045, 5946, 7332, 7333, 7338, 7339, 7395))),
    BEAUTY(Map.of("Красота", List.of(5977, 7230, 7297, 7298))),
    MUSIC(Map.of("Музыка", List.of(5733, 5735))),
    CLOTHES_SHOES_JEWELRY_WATCHES(Map.of("Одежда, Обувь, Ювелирные изделия и часы", List.of(5094, 5137, 5139, 5611, 5621, 5631, 5641, 5651, 5661, 5681, 5691, 5697, 5698, 5699, 5931, 5944, 5949, 5950, 7296, 7631))),
    ENTERTAINMENT(Map.of("Развлечения", List.of(	7911, 7922, 7929, 7932, 7933, 7941, 7991, 7992, 7993, 7994, 7996, 7997, 7998, 7999, 8664))),
    RESTAURANTS(Map.of("Рестораны", List.of(5811, 5812, 5813))),
    SPORTING_GOODS(Map.of("Спорттовары", List.of(5941, 5655, 5940))),
    SOUVENIRS(Map.of("Сувениры", List.of(5947))),
    TRANSPORT(Map.of("Транспорт", List.of(4111, 4121, 4131, 4457, 4468, 4784, 4789, 5013, 5271, 5551, 5561, 5592, 5598, 5599, 7511, 7523))),
    FAST_FOOD(Map.of("Фаст Фуд", List.of(5814))),
    FUEL(Map.of("Топливо", List.of(5172, 5541, 5542, 5983))),
    SUPER_MARKET(Map.of("Супермаркеты", List.of(5715, 5451, 5462, 5412, 5422, 5441, 5297, 5298, 5411, 5921, 5499, 5300))),
    DUTY_FREE(Map.of("Duty Free", List.of(5309))),
    DIGITAL_GOODS(Map.of("Цифровые товары", List.of(5818))),
    VARIOUS_GOODS(Map.of("Различные товары", List.of(5331))),
    SERVICE(Map.of("Сервис", List.of(5964))),
    FLOWERS(Map.of("Цветы", List.of(5193, 5992)));


    private final Map<String ,List<Integer>> mccMap;


    public static TinkoffCategory getCategory(String category) {
        return Arrays.stream(TinkoffCategory.values())
                .filter(i -> i.getMccMap().containsKey(category))
                .findFirst()
                .orElseThrow(() -> new IllegalArgumentException("No current category in TinkoffCategoryEnum"));
    }
}
